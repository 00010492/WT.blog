[{"id":"_4hgb892g9","title":"HASH: a free, online platform for modeling the world","blogText":"Sometimes when you’re trying to figure out the way the world works, basic math is enough to get you going. If we increase the hot water flow by x, the temperature of the mixture goes up by y.\r\n\r\nSometimes you’re working on something that’s just too complicated for that, and you can’t even begin to guess how the inputs affect the outputs. At the warehouse, everything seems to go fine when you have less than four employees, but when you hit five employees, they get in each others’ way so much that the fifth employee effectively does no additional work.\r\n\r\n"},{"id":"_rdx5mw16s","title":"The next CEO of Stack Overflow","blogText":"Big news! We’re looking for a new CEO for Stack Overflow. I’m stepping out of the day-to-day and up to the role of Chairman of the Board.\r\n\r\nStack Overflow has been around for more than a decade. As I look back, it’s really amazing how far it has come.  \r\n\r\nOnly six months after we had launched Stack Overflow, my co-founder Jeff Atwood and I were invited to speak at a Microsoft conference for developers in Las Vegas. We were there, I think, to demonstrate that you could use their latest ASP.NET MVC technology on a real website without too much of a disaster. (In fact .NET has been a huge, unmitigated success for us, but you kids go ahead and have fun with whatever platform you want mkay? They’re all great, or, at least, above-average).\r\n\r\nIt was a giant conference, held at the Venetian Hotel. This hotel was so big that other hotels stay there when they go on vacation. The main ballroom was the size of, approximately, Ireland. I later learned there were 5,000 developers in that room.\r\n\r\nI thought it would be a fun thing to ask the developers in the room how many of them had visited Stack Overflow. As I remember, Jeff was very much against this idea. “Joel,” he said, “That is going to be embarrassing and humiliating. Nobody is going to raise their hand.”\r\n\r\nWell, I asked it anyway. And we were both surprised to see about one-third of the hands go up. We were really making an impact! That felt really good.\r\n\r\nAnyway, I tried that trick again whenever I spoke to a large audience. It doesn’t work anymore. Today, audiences just laugh. It’s like asking, “Does anyone use gravity? Raise your hand if you use gravity.”"},{"id":"_8p874u8pb","title":"Things You Should Never Do, Part I","blogText":"Netscape 6.0 is finally going into its first public beta. There never was a version 5.0. The last major release, version 4.0, was released almost three years ago. Three years is an awfully long time in the Internet world. During this time, Netscape sat by, helplessly, as their market share plummeted.\r\n\r\nIt’s a bit smarmy of me to criticize them for waiting so long between releases. They didn’t do it on purpose, now, did they?\r\n\r\nWell, yes. They did. They did it by making the single worst strategic mistake that any software company can make:\r\n\r\nThey decided to rewrite the code from scratch.\r\n\r\nNetscape wasn’t the first company to make this mistake. Borland made the same mistake when they bought Arago and tried to make it into dBase for Windows, a doomed project that took so long that Microsoft Access ate their lunch, then they made it again in rewriting Quattro Pro from scratch and astonishing people with how few features it had. Microsoft almost made the same mistake, trying to rewrite Word for Windows from scratch in a doomed project called Pyramid which was shut down, thrown away, and swept under the rug. Lucky for Microsoft, they had never stopped working on the old code base, so they had something to ship, making it merely a financial disaster, not a strategic one.\r\n\r\nWe’re programmers. Programmers are, in their hearts, architects, and the first thing they want to do when they get to a site is to bulldoze the place flat and build something grand. We’re not excited by incremental renovation: tinkering, improving, planting flower beds.\r\n\r\nThere’s a subtle reason that programmers always want to throw away the code and start over. The reason is that they think the old code is a mess. And here is the interesting observation: they are probably wrong. The reason that they think the old code is a mess is because of a cardinal, fundamental law of programming:\r\n\r\nIt’s harder to read code than to write it.\r\n\r\n"},{"id":"_jph4l3ov5","title":"dthkbesr;gvewrmskdgjerdo flvkfed","blogText":"drilgvjnweosrdmgiwesdr nxveumsrldigfnlremvd"},{"id":"_dl279uy3n","title":"srgear","blogText":"szrhq3eahr"},{"id":"_nmklcafx8","title":"se;fiqwa rnkmclsng omrcsdf nml","blogText":"sdf,hwa esclnrszsrfnascmzoflasnfas"}]